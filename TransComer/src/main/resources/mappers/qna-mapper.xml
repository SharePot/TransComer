<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="qnaMapper">

	<resultMap type="Qna" id="qnaResultSet">
		<id property="qnaNo" column="QNA_NO" />
		<result property="qnaCategory" column="QNA_CATEGORY" />
		<result property="qnaTitle" column="QNA_TITLE" />
		<result property="qnaContent" column="QNA_CONTENT" />
		<result property="qnaWriteDate" column="QNA_WRITE_DATE" />
		<result property="qnaCount" column="QNA_COUNT" />
		<result property="memberId" column="MEMBER_ID" />
	</resultMap>

	<!-- qna 목록조회 쿼리 -->
	<select id="selectList" resultMap="qnaResultSet">
		SELECT * FROM QNA
		WHERE QNA_CATEGORY = 'ALL' OR QNA_CATEGORY = 'NOTICE'
		ORDER BY QNA_NO DESC
	</select>
	
	<select id="getListCount" resultType="_int">
		SELECT COUNT(*) FROM QNA
		WHERE QNA_CATEGORY = 'ALL' OR QNA_CATEGORY = 'NOTICE'
	</select>
	
	<!-- 관리자 문의글 쿼리 -->
	<select id="selectAdminQnaList" resultMap="qnaResultSet">
		SELECT * FROM QNA
		WHERE QNA_CATEGORY = 'ADMIN'
		ORDER BY QNA_NO DESC
	</select>
	
	<select id="getAdminListCount" resultType="_int">
		SELECT COUNT(*) FROM QNA
		WHERE QNA_CATEGORY = 'ADMIN'
	</select>
	
	<!-- QNA 검색 쿼리 -->
	<select id="searchQnaList" parameterType="QnaSearch" resultMap="qnaResultSet">
  		SELECT * FROM QNA
  		<where>
  		((QNA_CATEGORY = 'ALL' OR QNA_CATEGORY = 'NOTICE')
  			<choose>
	  			<when test="searchCondition == 'title'">
	  				AND QNA_TITLE LIKE '%' || #{searchValue} || '%') 		
		  		</when>
		  		<when test="searchCondition == 'writer'">
		  			AND MEMBER_ID LIKE '%' || #{searchValue} || '%')
		  		</when>
		  		<when test="searchCondition == 'content'">
		  			AND QNA_CONTENT LIKE '%' || #{searchValue} || '%')
		  		</when>
  			</choose>
  			OR QNA_CATEGORY = 'NOTICE'
  		</where>	
  		ORDER BY QNA_NO DESC
  	</select>
	
	<select id="getSearchListCount" parameterType="QnaSearch" resultType="_int">
		SELECT COUNT(*) FROM QNA
  		<where>
  		(QNA_CATEGORY = 'ALL' OR QNA_CATEGORY = 'NOTICE')
  			<choose>
	  			<when test="searchCondition == 'title'">
	  				AND QNA_TITLE LIKE '%' || #{searchValue} || '%'  		
		  		</when>
		  		<when test="searchCondition == 'writer'">
		  			AND MEMBER_ID LIKE '%' || #{searchValue} || '%'
		  		</when>
		  		<when test="searchCondition == 'content'">
		  			AND QNA_CONTENT LIKE '%' || #{searchValue} || '%'
		  		</when>
  			</choose>
  		</where>	
	</select>
	
	<update id="updateCount" parameterType="_int">
		UPDATE QNA SET QNA_COUNT = QNA_COUNT + 1
		WHERE QNA_NO = #{qnaNo}
	</update>
	
	<select id="selectOne" resultMap="qnaResultSet">
		SELECT * FROM QNA
		WHERE QNA_NO = #{qnaNo}
	</select>
	
	<!-- QnA 최신글 번호 조회 -->
	<select id="selectQnaLatestNo" parameterType="string" resultType="_int">
		SELECT QNA_NO FROM (SELECT * FROM QNA ORDER BY QNA_NO DESC) 
		WHERE ROWNUM = 1 AND MEMBER_ID = #{memberId}
	</select>
  	
  	<!-- 공지사항 등록 쿼리 -->
  	<insert id="insertQna" parameterType="Qna">
  		INSERT INTO QNA
  		VALUES(QNA_NO_SEQ.NEXTVAL,#{qnaCategory},#{qnaTitle},#{qnaContent},SYSDATE,DEFAULT,#{memberId})
  	</insert>
  	
  	<!-- 공지사항 수정 쿼리 -->
  	<update id="updateQna" parameterType="Qna">
  		UPDATE QNA
  		SET QNA_TITLE = #{qnaTitle}, QNA_CONTENT = #{qnaContent}
  		WHERE QNA_NO = #{qnaNo}
  	</update>
  	
  	<!-- 공지사항 삭제 쿼리 -->
  	<delete id="deleteQna" parameterType="_int">
  		DELETE FROM QNA
  		WHERE QNA_NO = #{qnaNo}
  	</delete>
</mapper>
