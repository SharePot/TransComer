<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="chatMapper">

	<!-- 채팅방 resultMap -->
	<resultMap type="ChatRoom" id="chatRoomResultSet">
		<id property="roomNo" column="room_no"></id>
		<result property="roomUser1" column="room_user1"></result>
		<result property="roomUser2" column="room_user2"></result>
	</resultMap>
	
	<!-- 채팅 정보 resultMap -->
	<resultMap type="ChatMessage" id="chatMessageResultSet">
		<id property="chatMessageNo" column="chat_message_no"/>
		<result property="sendUser" column="send_user"/>
		<result property="receiveUser" column="receive_user"/>
		<result property="chatContent" column="chat_content"/>
		<result property="chatSendDate" column="chat_send_date"/>
		<result property="roomNo" column="room_no"/>
	</resultMap>
	
	<!-- 실시간 유저 정보 resultMap -->
	<resultMap type="OnlineMember" id="onlineMemberResultSet">
		<id property="onlineNo" column="online_no"/>
		<result property="memberId" column="member_id"/>
	</resultMap>
	
	<!-- 채팅방이 있는지 확인(없으면 0리턴) -->
	<select id="checkChatRoom" parameterType="ChatRoom" resultType="_int">
		select count(*) from chat_room
		where CONCAT(room_user1,room_user2)=CONCAT(#{roomUser1},#{roomUser2})
		or CONCAT(room_user1,room_user2)=CONCAT(#{roomUser2},#{roomUser1})
	</select>
	
	<!-- 해당 유저들이 사용하는 채팅 방 번호 가져오기 -->
	<select id="selectChatRoom" parameterType="ChatRoom" resultType="_int">
		select room_no from chat_room
		where CONCAT(room_user1,room_user2)=CONCAT(#{roomUser1},#{roomUser2})
		or CONCAT(room_user1,room_user2)=CONCAT(#{roomUser2},#{roomUser1})
	</select>
	
	<!-- 채팅 방 (번호,유저2 데이터) 삽입 -->
	<insert id="insertChatRoom" parameterType="ChatRoom">
		insert into chat_room
		values(chat_room_no_seq.nextval,#{roomUser1}, #{roomUser2})	
	</insert>
	
	<!-- 채팅 내용 db에 삽입 -->
	<insert id="insertChatMessage" parameterType="ChatMessage">
		insert into chat_message
		values(chat_msg_no_seq.nextval,#{sendUser},
		#{receiveUser},#{chatContent},
		to_char(SYSDATE,'YY/MM/DD AM hh:mi'),#{roomNo})
	</insert>
	
	<!-- 채팅 방번호에 해당하는 채팅 내용 불러오기 -->
	<select id="selectChatMessageList" parameterType="_int" resultMap="chatMessageResultSet">
		select *
		from chat_message
		where room_no = #{roomNo}
		order by chat_send_date
	</select>
	
	<!-- 현재 실시간 접속 유저의 수를 구한다 -->
	<select id="selectOnlineMemberCnt" resultMap="onlineMemberResultSet">
		select count(*) from online_member
	</select>
	
	<!-- 현재 실시간 접속 유저 리스트를 가져온다 -->
	<select id="selectOnlineMemberList" resultMap="onlineMemberResultSet">
		select * from online_member
	</select>
	
	<!-- 로그인하면, 실시간 접속 유저 목록에서 추가한다 -->
	<insert id="insertOnlineMember" parameterType="string">
		insert into online_member
		values(online_no_seq.nextval, #{memberId})
	</insert>
	
	<!-- 로그아웃하면, 실시간 접속 유저 목록에서 제거한다 -->
	<delete id="deleteOnlineMember" parameterType="string">
		delete from online_member
		where member_id = #{memberId}
	</delete>
	
	
</mapper>
